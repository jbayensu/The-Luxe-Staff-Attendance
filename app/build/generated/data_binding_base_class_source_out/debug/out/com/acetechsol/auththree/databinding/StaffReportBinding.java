// Generated by view binder compiler. Do not edit!
package com.acetechsol.auththree.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.acetechsol.auththree.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class StaffReportBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView cashInTV;

  @NonNull
  public final TextView cashOutTV;

  @NonNull
  public final LinearLayout checkInOutDetailsLL;

  @NonNull
  public final TextView dateTV;

  @NonNull
  public final TextView departmentTV;

  @NonNull
  public final LinearLayout permissionDetailLL;

  @NonNull
  public final TextView phoneDescTV;

  @NonNull
  public final TextView reasonForAbsenceTV;

  @NonNull
  public final TextView sessionTV;

  @NonNull
  public final TextView staffNameTV;

  @NonNull
  public final TextView statusTV;

  @NonNull
  public final TextView timeInTV;

  @NonNull
  public final TextView timeOutTV;

  private StaffReportBinding(@NonNull CardView rootView, @NonNull TextView cashInTV,
      @NonNull TextView cashOutTV, @NonNull LinearLayout checkInOutDetailsLL,
      @NonNull TextView dateTV, @NonNull TextView departmentTV,
      @NonNull LinearLayout permissionDetailLL, @NonNull TextView phoneDescTV,
      @NonNull TextView reasonForAbsenceTV, @NonNull TextView sessionTV,
      @NonNull TextView staffNameTV, @NonNull TextView statusTV, @NonNull TextView timeInTV,
      @NonNull TextView timeOutTV) {
    this.rootView = rootView;
    this.cashInTV = cashInTV;
    this.cashOutTV = cashOutTV;
    this.checkInOutDetailsLL = checkInOutDetailsLL;
    this.dateTV = dateTV;
    this.departmentTV = departmentTV;
    this.permissionDetailLL = permissionDetailLL;
    this.phoneDescTV = phoneDescTV;
    this.reasonForAbsenceTV = reasonForAbsenceTV;
    this.sessionTV = sessionTV;
    this.staffNameTV = staffNameTV;
    this.statusTV = statusTV;
    this.timeInTV = timeInTV;
    this.timeOutTV = timeOutTV;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static StaffReportBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static StaffReportBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.staff_report, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static StaffReportBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cash_in_TV;
      TextView cashInTV = ViewBindings.findChildViewById(rootView, id);
      if (cashInTV == null) {
        break missingId;
      }

      id = R.id.cash_out_TV;
      TextView cashOutTV = ViewBindings.findChildViewById(rootView, id);
      if (cashOutTV == null) {
        break missingId;
      }

      id = R.id.check_in_out_details_LL;
      LinearLayout checkInOutDetailsLL = ViewBindings.findChildViewById(rootView, id);
      if (checkInOutDetailsLL == null) {
        break missingId;
      }

      id = R.id.date_TV;
      TextView dateTV = ViewBindings.findChildViewById(rootView, id);
      if (dateTV == null) {
        break missingId;
      }

      id = R.id.department_TV;
      TextView departmentTV = ViewBindings.findChildViewById(rootView, id);
      if (departmentTV == null) {
        break missingId;
      }

      id = R.id.permission_detail_LL;
      LinearLayout permissionDetailLL = ViewBindings.findChildViewById(rootView, id);
      if (permissionDetailLL == null) {
        break missingId;
      }

      id = R.id.phone_desc_TV;
      TextView phoneDescTV = ViewBindings.findChildViewById(rootView, id);
      if (phoneDescTV == null) {
        break missingId;
      }

      id = R.id.reason_for_absence_TV;
      TextView reasonForAbsenceTV = ViewBindings.findChildViewById(rootView, id);
      if (reasonForAbsenceTV == null) {
        break missingId;
      }

      id = R.id.session_TV;
      TextView sessionTV = ViewBindings.findChildViewById(rootView, id);
      if (sessionTV == null) {
        break missingId;
      }

      id = R.id.staff_name_TV;
      TextView staffNameTV = ViewBindings.findChildViewById(rootView, id);
      if (staffNameTV == null) {
        break missingId;
      }

      id = R.id.status_TV;
      TextView statusTV = ViewBindings.findChildViewById(rootView, id);
      if (statusTV == null) {
        break missingId;
      }

      id = R.id.time_in_TV;
      TextView timeInTV = ViewBindings.findChildViewById(rootView, id);
      if (timeInTV == null) {
        break missingId;
      }

      id = R.id.time_out_TV;
      TextView timeOutTV = ViewBindings.findChildViewById(rootView, id);
      if (timeOutTV == null) {
        break missingId;
      }

      return new StaffReportBinding((CardView) rootView, cashInTV, cashOutTV, checkInOutDetailsLL,
          dateTV, departmentTV, permissionDetailLL, phoneDescTV, reasonForAbsenceTV, sessionTV,
          staffNameTV, statusTV, timeInTV, timeOutTV);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
